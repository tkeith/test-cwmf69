// @prisma/client v4.x
// postgresql v14

// Database connection configuration with connection pooling and timeout settings
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Optimized connection settings for production
  relationMode = "prisma"
}

// Prisma Client generator with preview features for enhanced querying
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique", "fullTextSearch"]
  engineType      = "binary"
}

// Enhanced user model with presence tracking and security features
model User {
  id             String        @id @default(uuid()) @db.Uuid
  username       String        @unique @db.VarChar(50)
  email          String        @unique @db.VarChar(255)
  passwordHash   String        @db.Text
  status         UserStatus    @default(OFFLINE)
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  lastActive     DateTime      @updatedAt @db.Timestamp(6)
  isVerified     Boolean       @default(false)
  messages       Message[]     @relation("SentMessages")
  receivedMessages Message[]   @relation("ReceivedMessages")
  sessions       UserSession[]
  deletedAt      DateTime?     @db.Timestamp(6)

  // Optimized indexes for common queries
  @@index([username, email])
  @@index([status, lastActive])
  @@index([deletedAt])
}

// Enhanced message model with delay mechanism and comprehensive tracking
model Message {
  id          String       @id @default(uuid()) @db.Uuid
  content     String       @db.Text
  senderId    String       @db.Uuid
  recipientId String       @db.Uuid
  status      MessageStatus @default(DRAFT)
  createdAt   DateTime     @default(now()) @db.Timestamp(6)
  scheduledFor DateTime     @db.Timestamp(6)
  deliveredAt DateTime?    @db.Timestamp(6)
  readAt      DateTime?    @db.Timestamp(6)
  sender      User         @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  recipient   User         @relation("ReceivedMessages", fields: [recipientId], references: [id], onDelete: Cascade)
  retryCount  Int          @default(0)
  metadata    Json?
  deletedAt   DateTime?    @db.Timestamp(6)

  // Performance optimized indexes for message querying and delivery
  @@index([senderId, status])
  @@index([recipientId, status])
  @@index([scheduledFor, status])
  @@index([deliveredAt])
  @@index([deletedAt])
}

// Enhanced session management with security features
model UserSession {
  id           String    @id @default(uuid()) @db.Uuid
  userId       String    @db.Uuid
  token        String    @unique @db.Text
  expiresAt    DateTime  @db.Timestamp(6)
  deviceInfo   Json?
  ipAddress    String?   @db.VarChar(45)
  lastActivity DateTime  @default(now()) @db.Timestamp(6)
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  isRevoked    Boolean   @default(false)

  // Security and performance optimized indexes
  @@index([userId, expiresAt])
  @@index([token])
  @@index([lastActivity])
}

// Enhanced user presence status options
enum UserStatus {
  ONLINE
  AWAY
  DO_NOT_DISTURB
  OFFLINE
  INACTIVE
}

// Comprehensive message delivery status tracking
enum MessageStatus {
  DRAFT
  QUEUED
  SENDING
  DELIVERED
  READ
  FAILED
  CANCELLED
}