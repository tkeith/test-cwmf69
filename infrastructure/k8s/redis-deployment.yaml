apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: delayed-messaging
  labels:
    app: redis
    component: queue-cache
    version: "7.x"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: redis
        component: queue-cache
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: redis
      terminationGracePeriodSeconds: 60
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        runAsNonRoot: true
      containers:
        - name: redis
          image: redis:7-alpine  # v7.x
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: 6379
              name: redis
            - containerPort: 9121
              name: metrics
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          lifecycle:
            preStop:
              exec:
                command:
                  - redis-cli
                  - shutdown
          volumeMounts:
            - name: redis-config
              mountPath: /usr/local/etc/redis
              readOnly: true
            - name: redis-data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
        - name: redis-exporter
          image: oliver006/redis_exporter:v1.44.0
          ports:
            - containerPort: 9121
              name: metrics
          resources:
            requests:
              cpu: "100m"
              memory: "64Mi"
            limits:
              cpu: "200m"
              memory: "128Mi"
      volumes:
        - name: redis-config
          configMap:
            name: backend-config
            items:
              - key: redis.conf
                path: redis.conf
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data
        - name: tmp
          emptyDir: {}