apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: delayed-messaging-ingress
  namespace: delayed-messaging
  labels:
    app: delayed-messaging
    component: ingress
    environment: production
  annotations:
    # Ingress Controller Configuration
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS Configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-min-version: "TLSv1.3"
    
    # Timeout Settings for Long-Running Connections
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    
    # Request Size Limits
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    
    # WebSocket Support
    nginx.ingress.kubernetes.io/websocket-services: "backend-api"
    
    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    
    # Certificate Management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Prometheus Monitoring
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"

spec:
  tls:
    - hosts:
        - api.delayedmessaging.com
      secretName: delayed-messaging-tls
  rules:
    - host: api.delayedmessaging.com
      http:
        paths:
          # Main API endpoint
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend-api
                port:
                  number: 443
          
          # WebSocket endpoint
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: backend-api
                port:
                  number: 3001